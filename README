CONTENTS OF THIS FILE
---------------------
   
 * Introduction
 * Requirements
 * Recommended software
 * Usage
 * Documentation
 * FAQ
 * Reporting bugs
 * License
 
INTRODUCTION
------------

  wcorrQRL is a C subroutine library designed to compute the weighted phase correlation at which a set of not necessarily orthogonal templates match at best a set of observations in a weighted chi-squares sense. To this aims, it produces the weighted cross correlation function of the templates against the observations through a factorized QR algorithm with lookup table as described in Delchambre L., 2016, MNRAS, "Redshift determination through weighted phase correlation: a linearithmic implementation". The main strength of this implementation stands in its numerical stability as well as in its algorithmic complexity of O(N log N) flops.
   
REQUIREMENTS
------------

  wcorrQRL requires the following library and programs in order to be compiled and run:
    * GCC, the GNU Compiler Collection <https://gcc.gnu.org/>
    * FFTW3 library and header <http://www.fftw.org/>
    
RECOMMENDED SOFTWARE
--------------------

  The full source and header documentation can be produced in various format if using Doxygen 1.8 or greater <http://www.doxygen.org>.

USAGE
-----

  The core of the wcorrQRL library stands within the following C source files and associated headers:
    - includes/fft.h
    - includes/wcorr.h
    - src/fft.c
    - src/wcorr.c
  These can be used as usual by first including the wcorr.h file within the header of your source file; then compiling fft.c and wcorr.c files and finally linking the generated object files with your compiled source. This package comes along with a demonstration file 'demo.c' and a Makefile that gives actual examples on the way to use this library. Additionally, this demonstration program performs a comparison with a more classical approach to the weighted phase correlation, namely the solution to the normal equations associated with each potential phase through a Cholesky-related decomposition method.
  
  This demonstration program can be compiled by typing "make" or "make all" or "make demo" inside the root directory of wcorrQRL. The latter being run through the command
./demo nvar n ncomp nobs noise
  where
    nvar  Is the number of variable within the simulated templates
    n     Is the number of variable within the observations (observations are shifted linear combination of the templates plus noise)
    ncomp Is the number of templates to use
    nobs  Is the number of observations to use (i.e. the number of test to perform)
    noise The maximal noise to add to each variable within each observation (in sigma unit)
Note that all these parameters are optional and are replaced with defaults values if not present. In order to run the demonstration program with all default arguments, type "make run" inside the wcorrQRL root directory.
 
DOCUMENTATION
-------------

  Besides the present file, all sources files come along with Doxygen compliant comments allowing to produce the documentation of each C functions in various format. Note that the HTML documentation was already produced within the "doc" directory. Other format can be generated by editing the "Doxyfile" file and then run the "make doc" target.
 
FAQ
---

Q: How can I activate the zero weights optimized mode?

A: Zero weights optimized mode is activated only if the observations weights contains a number of successive zero greater or equal to the number of component we used. This case commonly happens while padding the observation such as to match the template size. For example, the command "./demo 10000 9993 7" will run the demonstration code within this optimized mode (since 9993 <= 10000-7).

REPORTING BUGS
--------------

  Please report any bugs to <ldelchambre@ulg.ac.be>.
 
LICENSE
-------

  wcorrQRL is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 3 of the License.
  wcorrQRL is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with wcorrQRL.  If not, see <http://www.gnu.org/licenses/>.
